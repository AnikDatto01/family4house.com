/**
 * Boxy 0.1.4 - Facebook-style dialog, with frills
 *
 * (c) 2008 Jason Frame
 * Licensed under the MIT License (LICENSE)
 */
 
/*
 * jQuery plugin
 *
 * Options:
 *   message: confirmation message for form submit hook (default: "Please confirm:")
 * 
 * Any other options - e.g. 'clone' - will be passed onto the boxy constructor (or
 * Boxy.load for AJAX operations)
 */

function Boxy(t, e) { this.boxy = jQuery(Boxy.WRAPPER), jQuery.data(this.boxy[0], "boxy", this), this.visible = !1, this.options = jQuery.extend({}, Boxy.DEFAULTS, e || {}), this.options.modal && (this.options = jQuery.extend(this.options, { center: !0, draggable: !1 })), this.options.actuator && jQuery.data(this.options.actuator, "active.boxy", this), this.setContent(t || "<div></div>"), this._setupTitleBar(), this.boxy.css("display", "none").appendTo(document.body), this.toTop(), this.options.fixed && (Boxy.IE6 ? this.options.fixed = !1 : this.boxy.addClass("fixed")), this.options.center && Boxy._u(this.options.x, this.options.y) ? this.center() : this.moveTo(Boxy._u(this.options.x) ? Boxy.DEFAULT_X : this.options.x, Boxy._u(this.options.y) ? Boxy.DEFAULT_Y : this.options.y), this.options.show && this.show() } jQuery.fn.boxy = function (t) { return t = t || {}, this.each(function () { var e = this.nodeName.toLowerCase(), i = this; "a" == e ? jQuery(this).click(function () { var e = Boxy.linkedTo(this), i = this.getAttribute("href"), o = jQuery.extend({ actuator: this, title: this.title }, t); if (i.match(/(&|\?)boxy\.modal/) && (o.modal = !0), e) e.show(); else if (i.indexOf("#") >= 0) { var n = jQuery(i.substr(i.indexOf("#"))), s = n.clone(!0); n.remove(), o.unloadOnHide = !1, new Boxy(s, o) } else i.match(/\.(jpe?g|png|gif|bmp)($|\?)/i) ? (o.unloadOnHide = !0, Boxy.loadImage(this.href, o)) : (o.cache || (o.unloadOnHide = !0), Boxy.load(this.href, o)); return !1 }) : "form" == e && jQuery(this).bind("submit.boxy", function () { return Boxy.confirm(t.message || "Please confirm:", function () { jQuery(i).unbind("submit.boxy").submit() }), !1 }) }) }, Boxy.EF = function () { }, jQuery.extend(Boxy, { WRAPPER: "<table cellspacing='0' cellpadding='0' border='0'  class='boxy-wrapper'><tr><td class='boxy-top-left'></td><td class='boxy-top'></td><td class='boxy-top-right'></td></tr><tr><td class='boxy-left'></td><td class='boxy-inner'></td><td class='boxy-right'></td></tr><tr><td class='boxy-bottom-left'></td><td class='boxy-bottom'></td><td class='boxy-bottom-right'></td></tr></table>", DEFAULTS: { title: null, closeable: !0, draggable: !0, clone: !1, actuator: null, center: !0, show: !0, modal: !1, fixed: !0, closeText: "[Close]", unloadOnHide: !1, clickToFront: !1, behaviours: Boxy.EF, afterDrop: Boxy.EF, afterShow: Boxy.EF, afterHide: Boxy.EF, beforeUnload: Boxy.EF, hideFade: !1, hideShrink: "vertical" }, IE6: jQuery.browser.msie && jQuery.browser.version < 7, DEFAULT_X: 50, DEFAULT_Y: 50, MODAL_OPACITY: .7, zIndex: 1337, dragConfigured: !1, resizeConfigured: !1, dragging: null, load: function (t, e) { e = e || {}; var i = { url: t, type: "GET", dataType: "html", cache: !1, success: function (t) { t = jQuery(t), e.filter && (t = jQuery(e.filter, t)), new Boxy(t, e) } }; jQuery.each(["type", "cache"], function () { this in e && (i[this] = e[this], delete e[this]) }), jQuery.ajax(i) }, loadImage: function (t, e) { var i = new Image; i.onload = function () { new Boxy($('<div class="boxy-image-wrapper"/>').append(this), e) }, i.src = t }, get: function (t) { var e = jQuery(t).parents(".boxy-wrapper"); return e.length ? jQuery.data(e[0], "boxy") : null }, linkedTo: function (t) { return jQuery.data(t, "active.boxy") }, alert: function (t, e, i) { return Boxy.ask(t, ["OK"], e, i) }, confirm: function (t, e, i) { return Boxy.ask(t, ["OK", "Cancel"], function (t) { "OK" == t && e() }, i) }, ask: function (t, e, i, o) { o = jQuery.extend({ modal: !0, closeable: !1 }, o || {}, { show: !0, unloadOnHide: !0 }); var n = jQuery("<div></div>").append(jQuery('<div class="question"></div>').html(t)), s = jQuery('<form class="answers"></form>'); s.html(jQuery.map(Boxy._values(e), function (t) { return "<input type='button' value='" + t + "' />" }).join(" ")), jQuery("input[type=button]", s).click(function () { var t = this; Boxy.get(this).hide(function () { i && jQuery.each(e, function (o, n) { if (n == t.value) return i(e instanceof Array ? n : o), !1 }) }) }), n.append(s), new Boxy(n, o) }, isModalVisible: function () { return jQuery(".boxy-modal-blackout").length > 0 }, _u: function () { for (var t = 0; t < arguments.length; t++)if (void 0 !== arguments[t]) return !1; return !0 }, _values: function (t) { if (t instanceof Array) return t; var e = []; for (var i in t) e.push(t[i]); return e }, _handleResize: function (t) { jQuery(".boxy-modal-blackout").css("display", "none").css(Boxy._cssForOverlay()).css("display", "block") }, _handleDrag: function (t) { var e; (e = Boxy.dragging) && e[0].boxy.css({ left: t.pageX - e[1], top: t.pageY - e[2] }) }, _nextZ: function () { return Boxy.zIndex++ }, _viewport: function () { var t = document.documentElement, e = document.body, i = window; return jQuery.extend(jQuery.browser.msie ? { left: e.scrollLeft || t.scrollLeft, top: e.scrollTop || t.scrollTop } : { left: i.pageXOffset, top: i.pageYOffset }, Boxy._u(i.innerWidth) ? Boxy._u(t) || Boxy._u(t.clientWidth) || 0 == t.clientWidth ? { width: e.clientWidth, height: e.clientHeight } : { width: t.clientWidth, height: t.clientHeight } : { width: i.innerWidth, height: i.innerHeight }) }, _setupModalResizing: function () { if (!Boxy.resizeConfigured) { var t = jQuery(window).resize(Boxy._handleResize); Boxy.IE6 && t.scroll(Boxy._handleResize), Boxy.resizeConfigured = !0 } }, _cssForOverlay: function () { return Boxy.IE6 ? Boxy._viewport() : { width: "100%", height: jQuery(document).height() } } }), Boxy.prototype = { estimateSize: function () { this.boxy.css({ visibility: "hidden", display: "block" }); var t = this.getSize(); return this.boxy.css("display", "none").css("visibility", "visible"), t }, getSize: function () { return [this.boxy.width(), this.boxy.height()] }, getContentSize: function () { var t = this.getContent(); return [t.width(), t.height()] }, getPosition: function () { var t = this.boxy[0]; return [t.offsetLeft, t.offsetTop] }, getCenter: function () { var t = this.getPosition(), e = this.getSize(); return [Math.floor(t[0] + e[0] / 2), Math.floor(t[1] + e[1] / 2)] }, getInner: function () { return jQuery(".boxy-inner", this.boxy) }, getContent: function () { return jQuery(".boxy-content", this.boxy) }, setContent: function (t) { return t = jQuery(t).css({ display: "block" }).addClass("boxy-content"), this.options.clone && (t = t.clone(!0)), this.getContent().remove(), this.getInner().append(t), this._setupDefaultBehaviours(t), this.options.behaviours.call(this, t), this }, moveTo: function (t, e) { return this.moveToX(t).moveToY(e), this }, moveToX: function (t) { return "number" == typeof t ? this.boxy.css({ left: t }) : this.centerX(), this }, moveToY: function (t) { return "number" == typeof t ? this.boxy.css({ top: t }) : this.centerY(), this }, centerAt: function (t, e) { var i = this[this.visible ? "getSize" : "estimateSize"](); return "number" == typeof t && this.moveToX(t - i[0] / 2), "number" == typeof e && this.moveToY(e - i[1] / 2), this }, centerAtX: function (t) { return this.centerAt(t, null) }, centerAtY: function (t) { return this.centerAt(null, t) }, center: function (t) { var e = Boxy._viewport(), i = this.options.fixed ? [0, 0] : [e.left, e.top]; return t && "x" != t || this.centerAt(i[0] + e.width / 2, null), t && "y" != t || this.centerAt(null, i[1] + e.height / 2), this }, centerX: function () { return this.center("x") }, centerY: function () { return this.center("y") }, resize: function (t, e, i) { if (this.visible) { var o = this._getBoundsForResize(t, e); return this.boxy.css({ left: o[0], top: o[1] }), this.getContent().css({ width: o[2], height: o[3] }), i && i(this), this } }, tween: function (t, e, i) { if (this.visible) { var o = this._getBoundsForResize(t, e), n = this; return this.boxy.stop().animate({ left: o[0], top: o[1] }), this.getContent().stop().animate({ width: o[2], height: o[3] }, function () { i && i(n) }), this } }, isVisible: function () { return this.visible }, show: function () { if (!this.visible) { if (this.options.modal) { var t = this; Boxy._setupModalResizing(), this.modalBlackout = jQuery('<div class="boxy-modal-blackout"></div>').css(jQuery.extend(Boxy._cssForOverlay(), { zIndex: Boxy._nextZ(), opacity: Boxy.MODAL_OPACITY })).appendTo(document.body), this.toTop(), this.options.closeable && jQuery(document.body).bind("keypress.boxy", function (e) { 27 == (e.which || e.keyCode) && (t.hide(), jQuery(document.body).unbind("keypress.boxy")) }) } return this.getInner().stop().css({ width: "", height: "" }), this.boxy.stop().css({ opacity: 1 }).show(), this.visible = !0, this.boxy.find(".close:first").focus(), this._fire("afterShow"), this } }, hide: function (t) { if (this.visible) { var e = this; this.options.modal && (jQuery(document.body).unbind("keypress.boxy"), this.modalBlackout.animate({ opacity: 0 }, function () { jQuery(this).remove() })); var i = { boxy: {}, inner: {} }, o = 0, n = function () { e.boxy.css({ display: "none" }), e.visible = !1, e._fire("afterHide"), t && t(e), e.options.unloadOnHide && e.unload() }; if (this.options.hideShrink) { var s = this.getInner(), r = this.options.hideShrink, h = this.getPosition(); o |= 1, !0 !== r && "vertical" != r || (i.inner.height = 0, i.boxy.top = h[1] + s.height() / 2), !0 !== r && "horizontal" != r || (i.inner.width = 0, i.boxy.left = h[0] + s.width() / 2) } return this.options.hideFade && (o |= 2, i.boxy.opacity = 0), o ? (1 & o && s.stop().animate(i.inner, 300), this.boxy.stop().animate(i.boxy, 300, n)) : n(), this } }, toggle: function () { return this[this.visible ? "hide" : "show"](), this }, hideAndUnload: function (t) { return this.options.unloadOnHide = !0, this.hide(t), this }, unload: function () { this._fire("beforeUnload"), this.boxy.remove(), this.options.actuator && jQuery.data(this.options.actuator, "active.boxy", !1) }, toTop: function () { return this.boxy.css({ zIndex: Boxy._nextZ() }), this }, getTitle: function () { return jQuery("> .title-bar h2", this.getInner()).html() }, setTitle: function (t) { return jQuery("> .title-bar h2", this.getInner()).html(t), this }, _getBoundsForResize: function (t, e) { var i = this.getContentSize(), o = [t - i[0], e - i[1]], n = this.getPosition(); return [Math.max(n[0] - o[0] / 2, 0), Math.max(n[1] - o[1] / 2, 0), t, e] }, _setupTitleBar: function () { if (this.options.title) { var t = this, e = jQuery("<div class='title-bar'></div>").html("<h2>" + this.options.title + "</h2>"); this.options.closeable && e.append(jQuery("<a href='#' class='close'></a>").html(this.options.closeText)), this.options.draggable && (e[0].onselectstart = function () { return !1 }, e[0].unselectable = "on", e[0].style.MozUserSelect = "none", Boxy.dragConfigured || (jQuery(document).mousemove(Boxy._handleDrag), Boxy.dragConfigured = !0), e.mousedown(function (e) { t.toTop(), Boxy.dragging = [t, e.pageX - t.boxy[0].offsetLeft, e.pageY - t.boxy[0].offsetTop], jQuery(this).addClass("dragging") }).mouseup(function () { jQuery(this).removeClass("dragging"), Boxy.dragging = null, t._fire("afterDrop") })), this.getInner().prepend(e), this._setupDefaultBehaviours(e) } }, _setupDefaultBehaviours: function (t) { var e = this; this.options.clickToFront && t.click(function () { e.toTop() }), jQuery(".close", t).click(function () { return e.hide(), !1 }).mousedown(function (t) { t.stopPropagation() }) }, _fire: function (t) { this.options[t].call(this) } };
